#include "TXLib.h"

struct KrestIliNol
{
    int x;
    int y;
    int risovat;
    HDC pic;
};

  int jopa()
{
 //txCreateWindow(490,490);

HDC fon = txLoadImage ("крестикинолики.bmp");

HDC krestic = txLoadImage ("крестик.bmp");
txBitBlt (txDC(), 0, 0, 162, 163, krestic, 0, 0);

HDC nolic = txLoadImage ("нолик.bmp");
txBitBlt (txDC(), 0, 170, 162, 158, nolic, 0, 0);

    int nomer_X = 0;
    int nomer_O = 0;
    KrestIliNol Krestiki[5];

    int x[5];
    int o[5];
	int figureX[5];
	int figureY[5];
    int figureO[5];
	int figureP[5];

    while (!GetAsyncKeyState(VK_ESCAPE))
    {
		txBegin();
        txClear();
        txBitBlt (txDC(), 0, 0, 500, 500, fon, 0, 0);

        if (txMouseButtons() & 1 ) //крестики
		{
            if (nomer_X < 5 and)
            {
                Krestiki[nomer_X].risovat = true;
                Krestiki[nomer_X].pic = krestic;
                Krestiki[nomer_X].x = round(txMouseX() / 165) * 165;
                Krestiki[nomer_X].y = round(txMouseY() / 165) * 165;
			}

            for (int counter = 0; counter < nomer_X; counter++)
            {
                if (Krestiki[nomer_X].x == Krestiki[counter].x and Krestiki[nomer_X].y == Krestiki[counter].y
                and nomer_X < 5
                )
                {
                    nomer_X = nomer_X - 1;
                }
            }

            if (Krestiki[nomer_X].x  < 495 and Krestiki[nomer_X].y  < 495 and  nomer_X < 5)
            {
                nomer_X = nomer_X + 1;
            } 
	    }


        if (txMouseButtons() & 2 ) //нолики
            if (nomer_O < 5)

		{
			o[nomer_O] = true;
			figureO[nomer_O] = round(txMouseX() / 165) * 165;
			figureP[nomer_O] = round(txMouseY() / 165) * 165;

            for (int counter = 0; counter < nomer_O; counter++)
            {
                if (figureO[nomer_O] == figureO[counter] and
                figureP[nomer_O] == figureP[counter] and nomer_O < 5)

                if (figureO[nomer_O]  < 495 and nomer_O < 5)
                {
                    nomer_O = nomer_O - 1;
                }
            }
                  nomer_O = nomer_O + 1;
	    }



		for (int counter = 0; counter < nomer_X; counter++)
        {
            if (Krestiki[counter].risovat  == true)
            {
                txTransparentBlt (txDC(), Krestiki[counter].x, Krestiki[counter].y, 162, 163, Krestiki[counter].pic, 0, 0, TX_WHITE);
            }
        }



     txSleep(10);
		txEnd();
   }

  return 0;
}
